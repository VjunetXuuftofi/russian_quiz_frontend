{"version":3,"sources":["logo.svg","Settings.js","Quiz.js","App.js","index.js"],"names":["case_schema","title","type","properties","sg_gen","default","sg_dat","sg_acc","sg_inst","sg_prep","pl_nom","pl_gen","pl_dat","pl_acc","pl_inst","pl_prep","schema","weight_by_freq","mark_stress","word_types","nouns","animate","inanimate","indeclineable","sg_only","pl_only","masculine","feminine","neuter","cases","verbs","perfective","imperfective","reflexive","imperative","past","present","future","adjectives","comparative","superlative","short","Settings","props","onChange","e","update_settings_data","formData","this","form_data","Component","Quiz","handle_next_button","state","answer_checked","next_question","setState","correct","answer_input","answer_revealed","i","server_response","answers","length","check_for_enter","code","change_answer","target","value","reveal_answer","question","options","method","headers","body","JSON","stringify","fetch","then","response","json","data","htmlFor","id","onKeyDown","onClick","join","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a3566ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\nimport Form from \"@rjsf/core\";\n\nconst case_schema = {\n    title: \"Ask questions to decline to\",\n    type: \"object\",\n    properties: {\n        sg_gen: {type: \"boolean\", title: \"Singular genitive.\", default: true},\n        sg_dat: {type: \"boolean\", title: \"Singular dative.\", default: true},\n        sg_acc: {type: \"boolean\", title: \"Singular accusative.\", default: true},\n        sg_inst: {type: \"boolean\", title: \"Singular instrumental.\", default: true},\n        sg_prep: {type: \"boolean\", title: \"Singular prepositional.\", default: true},\n        pl_nom: {type: \"boolean\", title: \"Plural nominative.\", default: true},\n        pl_gen: {type: \"boolean\", title: \"Plural genitive.\", default: true},\n        pl_dat: {type: \"boolean\", title: \"Plural dative.\", default: true},\n        pl_acc: {type: \"boolean\", title: \"Plural accusative.\", default: true},\n        pl_inst: {type: \"boolean\", title: \"Plural instrumental.\", default: true},\n        pl_prep: {type: \"boolean\", title: \"Plural prepositional\", default: true}\n    }\n}\n\nconst schema = {\n    title: \"Settings\",\n    type: \"object\",\n    properties: {\n        weight_by_freq: {type: \"boolean\", title: \"Show more common words more frequently.\", default: true},\n        mark_stress: {type: \"boolean\", title: \"Require marking stress with ' after stressed sound.\", default: false},\n        word_types: {\n            title: \"Word Types\",\n            type: \"object\",\n            properties: {\n                nouns: {\n                    title: \"Nouns\",\n                    type: \"object\",\n                    properties: {\n                        animate: {type: \"boolean\", title: \"Show animate nouns.\", default: true},\n                        inanimate: {type: \"boolean\", title: \"Show inanimate nouns.\", default: true},\n                        indeclineable: {type: \"boolean\", title: \"Show indeclineable nouns (e.g. такси)\", default: true},\n                        sg_only: {\n                            type: \"boolean\",\n                            title: \"Show nouns that only exist in the singular (e.g. воздух)\",\n                            default: true\n                        },\n                        pl_only: {\n                            type: \"boolean\",\n                            title: \"Show nouns that only exist in the plural (e.g. деньги).\",\n                            default: true\n                        },\n                        masculine: {type: \"boolean\", title: \"Show masculine nouns.\", default: true},\n                        feminine: {type: \"boolean\", title: \"Show feminine nouns.\", default: true},\n                        neuter: {type: \"boolean\", title: \"Show neuter nouns.\", default: true},\n                        cases: case_schema\n                    }\n                },\n                verbs: {\n                    title: \"Verbs\",\n                    type: \"object\",\n                    properties: {\n                        perfective: {type: \"boolean\", title: \"Show perfective verbs.\", default: true},\n                        imperfective: {type: \"boolean\", title: \"Show imperfective verbs.\", default: true},\n                        reflexive: {type: \"boolean\", title: \"Show reflexive verbs.\", default: true},\n                        imperative: {type: \"boolean\", title: \"Ask about imperatives.\", default: true},\n                        past: {type: \"boolean\", title: \"Ask about past tense.\", default: true},\n                        present: {\n                            type: \"boolean\",\n                            title: \"Ask about present tense (for imperfective verbs).\",\n                            default: true\n                        },\n                        future: {\n                            type: \"boolean\",\n                            title: \"Ask about future tense (for perfective verbs).\",\n                            default: true\n                        },\n                    }\n                },\n                adjectives: {\n                    title: \"Adjectives\",\n                    type: \"object\",\n                    properties: {\n                        comparative: {type: \"boolean\", title: \"Ask about comparatives.\", default: true},\n                        superlative: {type: \"boolean\", title: \"Ask about superlatives.\", default: true},\n                        short: {type: \"boolean\", title: \"Ask about short form adjectives.\", default: true},\n                        cases: case_schema\n                    }\n                }\n            }\n        }\n    }\n}\n\nclass Settings extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <Form schema={schema} onChange={e => this.props.update_settings_data(e.formData)} formData={this.props.form_data}/>\n        )\n    }\n}\n\nexport {Settings};","import React, { Component } from 'react';\n\n\nclass Quiz extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            server_response: {\n                question: \"Loading...\",\n                answers: []\n            },\n            answer_checked: false,\n            answer_input: \"\",\n            correct: false,\n            answer_revealed: false\n        }\n    }\n    componentDidMount() {\n        this.next_question()\n    }\n    next_question() {\n        const options = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.props.form_data)\n        };\n        fetch('https://russian-quiz.herokuapp.com/get_question', options)\n            .then(response => response.json())\n            .then(data => this.setState({server_response: data}));\n    }\n    handle_next_button = () => {\n        if (this.state.answer_checked) {\n            this.next_question();\n            this.setState({\n                answer_checked: false,\n                correct: false,\n                answer_input: \"\",\n                answer_revealed: false\n            });\n        } else {\n            for (let i = 0; i < this.state.server_response.answers.length; i++) {\n                let this_answer = this.state.server_response.answers[i];\n                if (this_answer === this.state.answer_input) {\n                    this.setState({correct: true});\n                }\n            }\n            this.setState({\n                answer_checked: true\n            })\n        }\n    }\n    check_for_enter = (e) => {\n        if (e.code === \"Enter\") {\n            this.setState({\n                answer_revealed: true\n            })\n        }\n    }\n    change_answer = (e) => {\n        this.setState({\n            answer_input: e.target.value\n        });\n    }\n    reveal_answer = () => {\n        this.setState({\n            answer_revealed: true\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <label htmlFor={\"answer_input\"}>{this.state.server_response.question}: </label>\n                <input id={\"answer_input\"} value={this.state.answer_input} onChange={e => this.change_answer(e)} onKeyDown={this.check_for_enter}/>\n                <button id={\"next\"} onClick={this.handle_next_button}>{this.state.answer_checked ? \"next question\" : \"check answer\"}</button>\n                <p>{this.state.answer_checked ? this.state.correct ? \"Correct!\": \"Incorrect.\" : \"\"}</p>\n                {this.state.answer_checked && !this.state.correct && !this.state.answer_revealed ? <button onClick={e => this.reveal_answer(e)}>reveal answer</button>: null}\n                {this.state.answer_revealed ? <p>{this.state.server_response.answers.join(\",\")}</p>: null}\n            </div>\n        )\n    }\n}\n\nexport {Quiz};","import logo from './logo.svg';\nimport React, { Component } from 'react';\nimport './App.css';\nimport {Settings} from './Settings'\nimport {Quiz} from './Quiz'\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formData: {\n                \"weight_by_freq\": true,\n                \"mark_stress\": false,\n                \"word_types\": {\n                    \"nouns\": {\n                        \"animate\": true,\n                        \"inanimate\": true,\n                        \"indeclineable\": true,\n                        \"sg_only\": true,\n                        \"pl_only\": true,\n                        \"masculine\": true,\n                        \"feminine\": true,\n                        \"neuter\": true,\n                        \"cases\": {\n                            \"sg_gen\": true,\n                            \"sg_dat\": true,\n                            \"sg_acc\": true,\n                            \"sg_inst\": true,\n                            \"sg_prep\": true,\n                            \"pl_nom\": true,\n                            \"pl_gen\": true,\n                            \"pl_dat\": true,\n                            \"pl_acc\": true,\n                            \"pl_inst\": true,\n                            \"pl_prep\": true\n                        }\n                    },\n                    \"verbs\": {\n                        \"perfective\": true,\n                        \"imperfective\": true,\n                        \"imperative\": true,\n                        \"past\": true,\n                        \"present\": true,\n                        \"future\": true,\n                        \"reflexive\": true\n                    },\n                    \"adjectives\": {\n                        \"comparative\": true,\n                        \"superlative\": true,\n                        \"short\": true,\n                        \"cases\": {\n                            \"sg_gen\": true,\n                            \"sg_dat\": true,\n                            \"sg_acc\": true,\n                            \"sg_inst\": true,\n                            \"sg_prep\": true,\n                            \"pl_nom\": true,\n                            \"pl_gen\": true,\n                            \"pl_dat\": true,\n                            \"pl_acc\": true,\n                            \"pl_inst\": true,\n                            \"pl_prep\": true\n                        }\n                    }\n                }\n            }\n        }\n    }\n    update_settings_data = (formData) => {\n        this.setState({\n            formData: formData\n        });\n    }\n    render() {\n        return (\n            <div className=\"React\">\n                <Settings form_data={this.state.formData} update_settings_data={this.update_settings_data}/>\n                <Quiz form_data={this.state.formData}/>\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}